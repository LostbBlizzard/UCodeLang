$ColorRGB
 float32 __0; 
 float32 __1; 
 float32 __2; 

$Color
 float32 __0; 
 float32 __1; 
 float32 __2; 
 float32 __3; 

$Color32
 int8 __0; 
 int8 __1; 
 int8 __2; 
 int8 __3; 

$Color24
 int8 __0; 
 int8 __1; 
 int8 __2; 


|(&StaticInit&)[] -> void:;

|(&StaticUnload&)[] -> void:;

|(&threadInit&)[] -> void:;

|(&threadUnload&)[] -> void:;

|ColorRGB:(&_init&)[ColorRGB* (&this&)] -> void:

 [Block:0]


//File:src.uc
//Line:38

   float32 A = 1.000000;
   (&this&)->__0 = A;

//Line:39

   float32 B = 1.000000;
   (&this&)->__1 = B;

//Line:40

   float32 C = 1.000000;
   (&this&)->__2 = C;
   ret;

|ColorRGB:(&_new&)^ColorRGB&[ColorRGB* (&this&)] -> void:

 [Block:0]


//Variable:ColorRGB:(&_new&):(&this&)

   ColorRGB* A = (&this&);
   void B = ColorRGB:(&_init&)(A);
   ret;

|ColorRGB:(&_new&)^ColorRGB&,f32,f32,f32[ColorRGB* (&this&),float32 R,float32 G,float32 B] -> void:

 [Block:0]


//Variable:ColorRGB:(&_new&):(&this&)
//Variable:ColorRGB:(&_new&):R
//Variable:ColorRGB:(&_new&):G
//Variable:ColorRGB:(&_new&):B

   ColorRGB* A = (&this&);
   void B = ColorRGB:(&_init&)(A);

//File:src.uc
//Line:44

   float32 C = R;
   ColorRGB* D = (&this&);
   D->__0 = C;

//Line:45

   float32 E = G;
   ColorRGB* F = (&this&);
   F->__1 = E;

//Line:46

   float32 G = B;
   ColorRGB* H = (&this&);
   H->__2 = G;
   ret;

|ColorRGB:(&equal&)^ColorRGB&,ColorRGB&imut[ColorRGB* (&this&),ColorRGB* other] -> int8:

 [Block:0]


//Variable:ColorRGB:(&equal&):(&this&)
//Variable:ColorRGB:(&equal&):other

   ColorRGB* A = (&this&);

//File:src.uc
//Line:49

   float32 B = A->__2;
   float32 C = other->__2;
   int8 D = B==C;
   ColorRGB* E = (&this&);
   float32 F = E->__1;
   float32 G = other->__1;
   int8 H = F==G;
   int8 I = D&&H;
   ColorRGB* J = (&this&);
   float32 K = J->__0;
   float32 L = other->__0;
   int8 M = K==L;
   int8 N = I&&M;
   ret = N;
   ret;

|ColorRGB:(&notequal&)^ColorRGB&,ColorRGB&imut[ColorRGB* (&this&),ColorRGB* other] -> int8:

 [Block:0]


//Variable:ColorRGB:(&notequal&):(&this&)
//Variable:ColorRGB:(&notequal&):other
//File:src.uc
//Line:52

   ColorRGB* A = (&this&);
   ColorRGB* B = A;
   ColorRGB* C = other;
   int8 D = ColorRGB:(&equal&)^ColorRGB&,ColorRGB&imut(B,C);
   int8 E = !D;
   ret = E;
   ret;

|ColorRGB:(&Cast&)^ColorRGB&imut[ColorRGB* (&this&)] -> Color24:

 [Block:0]


//Variable:ColorRGB:(&Cast&):(&this&)
//File:src.uc
//Line:0

   Color24 A;
   Color24* B = &A;

//Line:55

   float32 C = (&this&)->__0;
   float32 D = 255.000000;
   float32 E = C*D;
   int32 F = E -> int32;
   int8 G = F -> sint8;
   float32 H = (&this&)->__1;
   float32 I = 255.000000;
   float32 J = H*I;
   int32 K = J -> int32;
   int8 L = K -> sint8;
   float32 M = (&this&)->__2;
   float32 N = 255.000000;
   float32 O = M*N;
   int32 P = O -> int32;
   int8 Q = P -> sint8;
   void R = Color24:(&_new&)^Color24&,u8,u8,u8(B,G,L,Q);
   ret = A;
   ret;

|Color:(&_init&)[Color* (&this&)] -> void:

 [Block:0]


//File:src.uc
//Line:58

   float32 A = 1.000000;
   (&this&)->__0 = A;

//Line:59

   float32 B = 1.000000;
   (&this&)->__1 = B;

//Line:60

   float32 C = 1.000000;
   (&this&)->__2 = C;

//Line:61

   float32 D = 1.000000;
   (&this&)->__3 = D;
   ret;

|Color:(&_new&)^Color&[Color* (&this&)] -> void:

 [Block:0]


//Variable:Color:(&_new&):(&this&)

   Color* A = (&this&);
   void B = Color:(&_init&)(A);
   ret;

|Color:(&_new&)^Color&,f32,f32,f32,f32[Color* (&this&),float32 R,float32 G,float32 B,float32 A] -> void:

 [Block:0]


//Variable:Color:(&_new&):(&this&)
//Variable:Color:(&_new&):R
//Variable:Color:(&_new&):G
//Variable:Color:(&_new&):B
//Variable:Color:(&_new&):A

   Color* A = (&this&);
   void B = Color:(&_init&)(A);

//File:src.uc
//Line:65

   float32 C = R;
   Color* D = (&this&);
   D->__0 = C;

//Line:66

   float32 E = G;
   Color* F = (&this&);
   F->__1 = E;

//Line:67

   float32 G = B;
   Color* H = (&this&);
   H->__2 = G;

//Line:68

   float32 I = A;
   Color* J = (&this&);
   J->__3 = I;
   ret;

|Color:(&_new&)^Color&,ColorRGB&imut,f32[Color* (&this&),ColorRGB* color,float32 A] -> void:

 [Block:0]


//Variable:Color:(&_new&):(&this&)
//Variable:Color:(&_new&):color
//Variable:Color:(&_new&):A

   Color* A = (&this&);
   void B = Color:(&_init&)(A);

//File:src.uc
//Line:71

   float32 C = color->__0;
   Color* D = (&this&);
   D->__0 = C;

//Line:72

   float32 E = color->__1;
   Color* F = (&this&);
   F->__1 = E;

//Line:73

   float32 G = color->__2;
   Color* H = (&this&);
   H->__2 = G;

//Line:74

   float32 I = A;
   Color* J = (&this&);
   J->__3 = I;
   ret;

|Color:WithOutOpacity^Color&[Color* (&this&)] -> ColorRGB:

 [Block:0]


//Variable:Color:WithOutOpacity:(&this&)
//File:src.uc
//Line:0

   ColorRGB A;
   ColorRGB* B = &A;

//Line:77

   float32 C = (&this&)->__0;
   float32 D = (&this&)->__1;
   float32 E = (&this&)->__2;
   void F = ColorRGB:(&_new&)^ColorRGB&,f32,f32,f32(B,C,D,E);
   ret = A;
   ret;

|Color:(&equal&)^Color&,Color&imut[Color* (&this&),Color* other] -> int8:

 [Block:0]


//Variable:Color:(&equal&):(&this&)
//Variable:Color:(&equal&):other

   Color* A = (&this&);

//File:src.uc
//Line:80

   float32 B = A->__3;
   float32 C = other->__3;
   int8 D = B==C;
   Color* E = (&this&);
   float32 F = E->__2;
   float32 G = other->__2;
   int8 H = F==G;
   int8 I = D&&H;
   Color* J = (&this&);
   float32 K = J->__1;
   float32 L = other->__1;
   int8 M = K==L;
   int8 N = I&&M;
   Color* O = (&this&);
   float32 P = O->__0;
   float32 Q = other->__0;
   int8 R = P==Q;
   int8 S = N&&R;
   ret = S;
   ret;

|Color:(&notequal&)^Color&,Color&imut[Color* (&this&),Color* other] -> int8:

 [Block:0]


//Variable:Color:(&notequal&):(&this&)
//Variable:Color:(&notequal&):other
//File:src.uc
//Line:83

   Color* A = (&this&);
   Color* B = A;
   Color* C = other;
   int8 D = Color:(&equal&)^Color&,Color&imut(B,C);
   int8 E = !D;
   ret = E;
   ret;

|Color:(&Cast&)^Color&imut[Color* (&this&)] -> Color32:

 [Block:0]


//Variable:Color:(&Cast&):(&this&)
//File:src.uc
//Line:0

   Color32 A;
   Color32* B = &A;

//Line:86

   float32 C = (&this&)->__0;
   float32 D = 255.000000;
   float32 E = C*D;
   int32 F = E -> int32;
   int8 G = F -> sint8;
   float32 H = (&this&)->__1;
   float32 I = 255.000000;
   float32 J = H*I;
   int32 K = J -> int32;
   int8 L = K -> sint8;
   float32 M = (&this&)->__2;
   float32 N = 255.000000;
   float32 O = M*N;
   int32 P = O -> int32;
   int8 Q = P -> sint8;
   float32 R = (&this&)->__3;
   float32 S = 255.000000;
   float32 T = R*S;
   int32 U = T -> int32;
   int8 V = U -> sint8;
   void W = Color32:(&_new&)^Color32&,u8,u8,u8,u8(B,G,L,Q,V);
   ret = A;
   ret;

|Color32:(&_init&)[Color32* (&this&)] -> void:

 [Block:0]


//File:src.uc
//Line:89

   int8 A = -1;
   (&this&)->__0 = A;

//Line:90

   int8 B = -1;
   (&this&)->__1 = B;

//Line:91

   int8 C = -1;
   (&this&)->__2 = C;

//Line:92

   int8 D = -1;
   (&this&)->__3 = D;
   ret;

|Color32:(&_new&)^Color32&[Color32* (&this&)] -> void:

 [Block:0]


//Variable:Color32:(&_new&):(&this&)

   Color32* A = (&this&);
   void B = Color32:(&_init&)(A);
   ret;

|Color32:(&_new&)^Color32&,u8,u8,u8,u8[Color32* (&this&),int8 r,int8 g,int8 b,int8 a] -> void:

 [Block:0]


//Variable:Color32:(&_new&):(&this&)
//Variable:Color32:(&_new&):r
//Variable:Color32:(&_new&):g
//Variable:Color32:(&_new&):b
//Variable:Color32:(&_new&):a

   Color32* A = (&this&);
   void B = Color32:(&_init&)(A);

//File:src.uc
//Line:96

   int8 C = r;
   Color32* D = (&this&);
   D->__0 = C;

//Line:97

   int8 E = g;
   Color32* F = (&this&);
   F->__1 = E;

//Line:98

   int8 G = b;
   Color32* H = (&this&);
   H->__2 = G;

//Line:99

   int8 I = a;
   Color32* J = (&this&);
   J->__3 = I;
   ret;

|Color32:(&_new&)^Color32&,Color24&imut,u8[Color32* (&this&),Color24* color,int8 a] -> void:

 [Block:0]


//Variable:Color32:(&_new&):(&this&)
//Variable:Color32:(&_new&):color
//Variable:Color32:(&_new&):a

   Color32* A = (&this&);
   void B = Color32:(&_init&)(A);

//File:src.uc
//Line:102

   int8 C = color->__0;
   Color32* D = (&this&);
   D->__0 = C;

//Line:103

   int8 E = color->__1;
   Color32* F = (&this&);
   F->__1 = E;

//Line:104

   int8 G = color->__2;
   Color32* H = (&this&);
   H->__2 = G;

//Line:105

   int8 I = a;
   Color32* J = (&this&);
   J->__3 = I;
   ret;

|Color32:WithOutOpacity^Color32&[Color32* (&this&)] -> Color24:

 [Block:0]


//Variable:Color32:WithOutOpacity:(&this&)
//File:src.uc
//Line:0

   Color24 A;
   Color24* B = &A;

//Line:108

   int8 C = (&this&)->__0;
   int8 D = (&this&)->__1;
   int8 E = (&this&)->__2;
   void F = Color24:(&_new&)^Color24&,u8,u8,u8(B,C,D,E);
   ret = A;
   ret;

|Color32:(&equal&)^Color32&,Color32&imut[Color32* (&this&),Color32* other] -> int8:

 [Block:0]


//Variable:Color32:(&equal&):(&this&)
//Variable:Color32:(&equal&):other

   Color32* A = (&this&);

//File:src.uc
//Line:111

   int8 B = A->__3;
   int8 C = other->__3;
   int8 D = B==C;
   Color32* E = (&this&);
   int8 F = E->__2;
   int8 G = other->__2;
   int8 H = F==G;
   int8 I = D&&H;
   Color32* J = (&this&);
   int8 K = J->__1;
   int8 L = other->__1;
   int8 M = K==L;
   int8 N = I&&M;
   Color32* O = (&this&);
   int8 P = O->__0;
   int8 Q = other->__0;
   int8 R = P==Q;
   int8 S = N&&R;
   ret = S;
   ret;

|Color32:(&notequal&)^Color32&,Color32&imut[Color32* (&this&),Color32* other] -> int8:

 [Block:0]


//Variable:Color32:(&notequal&):(&this&)
//Variable:Color32:(&notequal&):other
//File:src.uc
//Line:114

   Color32* A = (&this&);
   Color32* B = A;
   Color32* C = other;
   int8 D = Color32:(&equal&)^Color32&,Color32&imut(B,C);
   int8 E = !D;
   ret = E;
   ret;

|Color32:(&Cast&)^Color32&imut[Color32* (&this&)] -> Color:

 [Block:0]


//Variable:Color32:(&Cast&):(&this&)
//File:src.uc
//Line:0

   Color A;
   Color* B = &A;

//Line:117

   int8 C = (&this&)->__0;
   int32 D = C -> uint32;
   float32 E = D -> float32;
   float32 F = 255.000000;
   float32 G = E/F;
   int8 H = (&this&)->__1;
   int32 I = H -> uint32;
   float32 J = I -> float32;
   float32 K = 255.000000;
   float32 L = J/K;
   int8 M = (&this&)->__2;
   int32 N = M -> uint32;
   float32 O = N -> float32;
   float32 P = 255.000000;
   float32 Q = O/P;
   int8 R = (&this&)->__3;
   int32 S = R -> uint32;
   float32 T = S -> float32;
   float32 U = 255.000000;
   float32 V = T/U;
   void W = Color:(&_new&)^Color&,f32,f32,f32,f32(B,G,L,Q,V);
   ret = A;
   ret;

|Color24:(&_init&)[Color24* (&this&)] -> void:

 [Block:0]


//File:src.uc
//Line:122

   int8 A = -1;
   (&this&)->__0 = A;

//Line:123

   int8 B = -1;
   (&this&)->__1 = B;

//Line:124

   int8 C = -1;
   (&this&)->__2 = C;
   ret;

|Color24:(&_new&)^Color24&[Color24* (&this&)] -> void:

 [Block:0]


//Variable:Color24:(&_new&):(&this&)

   Color24* A = (&this&);
   void B = Color24:(&_init&)(A);
   ret;

|Color24:(&_new&)^Color24&,u8,u8,u8[Color24* (&this&),int8 r,int8 g,int8 b] -> void:

 [Block:0]


//Variable:Color24:(&_new&):(&this&)
//Variable:Color24:(&_new&):r
//Variable:Color24:(&_new&):g
//Variable:Color24:(&_new&):b

   Color24* A = (&this&);
   void B = Color24:(&_init&)(A);

//File:src.uc
//Line:128

   int8 C = r;
   Color24* D = (&this&);
   D->__0 = C;

//Line:129

   int8 E = g;
   Color24* F = (&this&);
   F->__1 = E;

//Line:130

   int8 G = b;
   Color24* H = (&this&);
   H->__2 = G;
   ret;

|Color24:(&equal&)^Color24&,Color24&imut[Color24* (&this&),Color24* other] -> int8:

 [Block:0]


//Variable:Color24:(&equal&):(&this&)
//Variable:Color24:(&equal&):other

   Color24* A = (&this&);

//File:src.uc
//Line:133

   int8 B = A->__2;
   int8 C = other->__2;
   int8 D = B==C;
   Color24* E = (&this&);
   int8 F = E->__1;
   int8 G = other->__1;
   int8 H = F==G;
   int8 I = D&&H;
   Color24* J = (&this&);
   int8 K = J->__0;
   int8 L = other->__0;
   int8 M = K==L;
   int8 N = I&&M;
   ret = N;
   ret;

|Color24:(&notequal&)^Color24&,Color24&imut[Color24* (&this&),Color24* other] -> int8:

 [Block:0]


//Variable:Color24:(&notequal&):(&this&)
//Variable:Color24:(&notequal&):other
//File:src.uc
//Line:136

   Color24* A = (&this&);
   Color24* B = A;
   Color24* C = other;
   int8 D = Color24:(&equal&)^Color24&,Color24&imut(B,C);
   int8 E = !D;
   ret = E;
   ret;

|Color24:(&Cast&)^Color24&imut[Color24* (&this&)] -> ColorRGB:

 [Block:0]


//Variable:Color24:(&Cast&):(&this&)
//File:src.uc
//Line:0

   ColorRGB A;
   ColorRGB* B = &A;

//Line:139

   int8 C = (&this&)->__0;
   int32 D = C -> uint32;
   float32 E = D -> float32;
   float32 F = 255.000000;
   float32 G = E/F;
   int8 H = (&this&)->__1;
   int32 I = H -> uint32;
   float32 J = I -> float32;
   float32 K = 255.000000;
   float32 L = J/K;
   int8 M = (&this&)->__2;
   int32 N = M -> uint32;
   float32 O = N -> float32;
   float32 P = 255.000000;
   float32 Q = O/P;
   void R = ColorRGB:(&_new&)^ColorRGB&,f32,f32,f32(B,G,L,Q);
   ret = A;
   ret;

|Color2[] -> int8:

 [Block:0]


//File:src.uc
//Line:144
//Variable:Color2:white

   Color32 A;

//Line:0

   Color32* B = &A;
   void C = Color32:(&_new&)^Color32&(B);

//Line:144
//Line:145
//Variable:Color2:r

   Color D;
   Color32* E = &A;
   Color F = Color32:(&Cast&)^Color32&imut(E);
   D = F;

//Line:146

   Color* G = &D;
   Color H;
   Color* I = &H;
   void J = Color:(&_new&)^Color&(I);
   Color* K = &H;
   int8 L = Color:(&equal&)^Color&,Color&imut(G,K);
   ret = L;
   ret;

|main^u8[int8 R] -> float32:

 [Block:0]


//Variable:main:R
//File:src.uc
//Line:151

   int8 A = R;
   int32 B = A -> uint32;
   float32 C = B -> float32;
   float32 D = 255.000000;
   float32 E = C/D;
   ret = E;
   ret;

